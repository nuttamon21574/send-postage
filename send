Python 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:59:51) [MSC v.1914 64 bit (AMD64)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> # -*- coding: utf-8 -*-
"""TPK_NOW.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/1KvgY97kGc-M9FYbeXKdUNnfDUoYOkYFC
"""

import json #นำเข้าไลบารี่เพื่อเรียกใช้ json 
import datetime #นำเข้าไลบารีเพื่อเรียกใช้ datetime 
import math #นำเข้าไลบารีเพื่อเรียกใช้ math
# READ TH DISTRICT JSON FILE
file            = open('raw_database.json', encoding="utf8") #เปิดไฟล์และอ่านไฟล์ raw_database.json
provincedata    = json.load(file) #แปลงไฟล์ j.son ให้เป็น Array และเก็บไว้ใน provincedata
file.close #ปิดไฟล์

# INIT VARIBLE
storesetting    = {} #สร้างตัวแปร storesetting สำหรับเก็บค่าข้อมูลการตั้งค่าของร้าน เช่น ชื่อร้าน
shipping_fee    = {} #สร้างตัวแปร shipping_fee สำหรับเก็บข้อมูลราคาส่งในแต่ละเขตโดยแบ่งเป็นชนิดของบรรจุ น้ำหนัก และเขตการให้บริการ
shipping_fee[1]                   = {} #สร้าง Array 1 เพื่อเก็บข้อมูล key name max_weight fee ให้อยู่ใน Array เดียวกัน
shipping_fee[1]['key']            = 1 #สร้าง Array key เพื่อเก็บข้อมูล 1
shipping_fee[1]['name']           = "ซองเอกสารสีน้ำตาล" #สร้าง Array name เพื่อเก็บข้อมูลชนิดของพัสดุ (ซองเอกสารสีน้ำตาล)
shipping_fee[1]['max_weight']     = 0.5 #สร้าง Array max_weight เพื่อเก็บข้อมูล 0.5 (คือค่าน้ำหนักสูงสุดที่พัสดุรับได้ หน่วยเป็นกิโลกรัม)
shipping_fee[1]['fee']            = {} #สร้าง Array fee เพื่อเก็บข้อมูล main out package ให้อยู่ใน Array เดียวกัน
shipping_fee[1]['fee']['main']    = 30 #สร้าง Array main เพื่อเก็บค่า 30 (ค่าส่งพัสดุในพื้นที่ปริมณฑล)
shipping_fee[1]['fee']['out']     = 50 #สร้าง Array out เพื่อเก็บค่า 50 (ค่าส่งพัสดุในพื้นที่ต่างจังหวัด)
shipping_fee[1]['fee']['package'] = 0 #สร้าง Array package เพื่อเก็บค่า 0 (ค่าบรรจุภัณฑ์)

shipping_fee[2]                   = {} #สร้าง Array 2 เพื่อเก็บข้อมูล key name max_weight fee ให้อยู่ใน Array เดียวกัน
shipping_fee[2]['key']            = 2 #สร้าง Array key เพื่อเก็บข้อมูล 2
shipping_fee[2]['name']           = "ซองเอกสารกันน้ำชนิดบาง" #สร้าง Array name เพื่อเก็บข้อมูลชนิดของพัสดุ (ซองเอกสารกันน้ำชนิดบาง)
shipping_fee[2]['max_weight']     = 0.5 #สร้าง Array max_weight เพื่อเก็บค่า 0.5 (คือค่าน้ำหนักสูงสุดที่พัสดุรับได้ หน่วยเป็นกิโลกรัม)
shipping_fee[2]['fee']            = {} #สร้าง Array fee เพื่อเก็บข้อมูล main out package ให้อยู่ใน Array เดียวกัน
shipping_fee[2]['fee']['main']    = 25 #สร้าง Array main เพื่อเก็บค่า 25 (ค่าส่งพัสดุในพื้นที่ปริมปริมณฑล)
shipping_fee[2]['fee']['out']     = 49 #สร้าง Array out เพื่อเก็บค่า 49 (ค่าส่งพัสดุในพื้นที่ต่างจังหวัด)
shipping_fee[2]['fee']['package'] = 0 #สร้าง Array package เพื่อเก็บค่า 0 (ค่าบรรจุภัณฑ์)

shipping_fee[3]                   = {} #สร้าง Array 3 เพื่อเก็บข้อมูล key name max_weight fee ให้อยู่ใน Array เดียวกัน
shipping_fee[3]['key']            = 3 #สร้าง Array key เพื่อเก็บข้อมูล 3 
shipping_fee[3]['name']           = "ซองเอกสารกันน้ำชนิด A และ B" #สร้าง Array name เพื่อเก็บข้อมูลชนิดของพัสดุ 
shipping_fee[3]['max_weight']     = 2 #สร้าง Array max_weight เพื่อเก็บข้อมูล 2 (คือค่าน้ำหนักสูงสุดที่พัสดุรับได้ หน่วยเป็นกิโลกรัม)
shipping_fee[3]['fee']            = {} #สร้าง Array fee เพื่อเก็บข้อมูล main out package ให้อยู่ใน Array เดียวกัน
shipping_fee[3]['fee']['main']    = 40 #สร้าง Array out เพื่อเก็บค่า 40 (ค่าส่งพัสดุในพื้นที่ปริมปริมณฑล)
shipping_fee[3]['fee']['out']     = 60 #สร้าง Array out เพื่อเก็บค่า 60 (ค่าส่งพัสดุในพื้นที่ต่างจังหวัด)
shipping_fee[3]['fee']['package'] = 0 #สร้าง Array package เพื่อเก็บค่า 0 (ค่าบรรจุภัณฑ์)

shipping_fee[4]                   = {} #สร้าง Array 4 เพื่อเก็บข้อมูล key name max_weight fee ให้อยู่ใน Array เดียวกัน
shipping_fee[4]['key']            = 4 #สร้าง Array key เพื่อเก็บข้อมูล 4
shipping_fee[4]['name']           = "ซองเอกสารกันน้ำชนิด C" #สร้าง Array name เพื่อเก็บข้อมูลชนิดของพัสดุ 
shipping_fee[4]['max_weight']     = 7 #สร้าง Array max_weight เพื่อเก็บข้อมูล 7 (คือค่าน้ำหนักสูงสุดที่พัสดุรับได้ หน่วยเป็นกิโลกรัม)
shipping_fee[4]['fee']            = {} #สร้าง Array fee เพื่อเก็บข้อมูล main out package ให้อยู่ใน Array เดียวกัน
shipping_fee[4]['fee']['main']    = 65 #สร้าง Array out เพื่อเก็บค่า 65 (ค่าส่งพัสดุในพื้นที่ปริมปริมณฑล)
shipping_fee[4]['fee']['out']     = 80 #สร้าง Array out เพื่อเก็บค่า 80 (ค่าส่งพัสดุในพื้นที่ต่างจังหวัด)
shipping_fee[4]['fee']['package'] = 0 #สร้าง Array package เพื่อเก็บค่า 0 (ค่าบรรจุภัณฑ์)

shipping_fee[5]                   = {} #สร้าง Array 5 เพื่อเก็บข้อมูล key name max_weight fee ให้อยู่ใน Array เดียวกัน
shipping_fee[5]['key']            = 5 #สร้าง Array key เพื่อเก็บข้อมูล 5
shipping_fee[5]['name']           = "กล่องขนาด Mini" #สร้าง Array name เพื่อเก็บข้อมูลชนิดของพัสดุ 
shipping_fee[5]['max_weight']     = 2 #สร้าง Array max_weight เพื่อเก็บข้อมูล 2  (คือค่าน้ำหนักสูงสุดที่พัสดุรับได้ หน่วยเป็นกิโลกรัม)
shipping_fee[5]['fee']            = {} #สร้าง Array fee เพื่อเก็บข้อมูล main out package ให้อยู่ใน Array เดียวกัน
shipping_fee[5]['fee']['main']    = 35 #สร้าง Array out เพื่อเก็บค่า 35 (ค่าส่งพัสดุในพื้นที่ปริมปริมณฑล)
shipping_fee[5]['fee']['out']     = 55 #สร้าง Array out เพื่อเก็บค่า 55 (ค่าส่งพัสดุในพื้นที่ต่างจังหวัด)
shipping_fee[5]['fee']['package'] = 5 #สร้าง Array package เพื่อเก็บค่า 5 (ค่าบรรจุภัณฑ์)

shipping_fee[6]                   = {} #สร้าง Array 6 เพื่อเก็บข้อมูล key name max_weight fee ให้อยู่ใน Array เดียวกัน
shipping_fee[6]['key']            = 6 #สร้าง Array key เพื่อเก็บข้อมูล 6
shipping_fee[6]['name']           = "กล่องขนาด S" #สร้าง Array name เพื่อเก็บข้อมูลชนิดของพัสดุ 
shipping_fee[6]['max_weight']     = 7 #สร้าง Array max_weight เพื่อเก็บข้อมูล 7  (คือค่าน้ำหนักสูงสุดที่พัสดุรับได้ หน่วยเป็นกิโลกรัม)
shipping_fee[6]['fee']            = {} #สร้าง Array fee เพื่อเก็บข้อมูล main out package ให้อยู่ใน Array เดียวกัน
shipping_fee[6]['fee']['main']    = 65 #สร้าง Array out เพื่อเก็บค่า 65 (ค่าส่งพัสดุในพื้นที่ปริมปริมณฑล)
shipping_fee[6]['fee']['out']     = 80 #สร้าง Array out เพื่อเก็บค่า 80 (ค่าส่งพัสดุในพื้นที่ต่างจังหวัด)
shipping_fee[6]['fee']['package'] = 10 #สร้าง Array package เพื่อเก็บค่า 10 (ค่าบรรจุภัณฑ์)

shipping_fee[7]                   = {} #สร้าง Array 7 เพื่อเก็บข้อมูล key name max_weight fee ให้อยู่ใน Array เดียวกัน
shipping_fee[7]['key']            = 7 #สร้าง Array key เพื่อเก็บข้อมูล 7
shipping_fee[7]['name']           = "กล่องขนาด M" #สร้าง Array name เพื่อเก็บข้อมูลชนิดของพัสดุ 
shipping_fee[7]['max_weight']     = 10 #สร้าง Array max_weight เพื่อเก็บข้อมูล 10 (คือค่าน้ำหนักสูงสุดที่พัสดุรับได้ หน่วยเป็นกิโลกรัม)
shipping_fee[7]['fee']            = {} #สร้าง Array fee เพื่อเก็บข้อมูล main out package ให้อยู่ใน Array เดียวกัน
shipping_fee[7]['fee']['main']    = 90 #สร้าง Array out เพื่อเก็บค่า 90 (ค่าส่งพัสดุในพื้นที่ปริมปริมณฑล)
shipping_fee[7]['fee']['out']     = 100 #สร้าง Array out เพื่อเก็บค่า 100 (ค่าส่งพัสดุในพื้นที่ต่างจังหวัด)
shipping_fee[7]['fee']['package'] = 20 #สร้าง Array package เพื่อเก็บค่า 20 (ค่าบรรจุภัณฑ์)

shipping_fee[8]                   = {} #สร้าง Array 8 เพื่อเก็บข้อมูล key name max_weight fee ให้อยู่ใน Array เดียวกัน
shipping_fee[8]['key']            = 8 #สร้าง Array key เพื่อเก็บข้อมูล 8
shipping_fee[8]['name']           = "กล่องขนาด L" #สร้าง Array name เพื่อเก็บข้อมูลชนิดของพัสดุ 
shipping_fee[8]['max_weight']     = 15 #สร้าง Array max_weight เพื่อเก็บข้อมูล 15 (คือค่าน้ำหนักสูงสุดที่พัสดุรับได้ หน่วยเป็นกิโลกรัม)
shipping_fee[8]['fee']            = {} #สร้าง Array fee เพื่อเก็บข้อมูล main out package ให้อยู่ใน Array เดียวกัน
shipping_fee[8]['fee']['main']    = 185 #สร้าง Array out เพื่อเก็บค่า 185 (ค่าส่งพัสดุในพื้นที่ปริมปริมณฑล)
shipping_fee[8]['fee']['out']     = 205 #สร้าง Array out เพื่อเก็บค่า 205 (ค่าส่งพัสดุในพื้นที่ต่างจังหวัด)
shipping_fee[8]['fee']['package'] = 30 #สร้าง Array package เพื่อเก็บค่า 30 (ค่าบรรจุภัณฑ์)

shipping_fee[9]                   = {} #สร้าง Array 9 เพื่อเก็บข้อมูล key name max_weight fee ให้อยู่ใน Array เดียวกัน
shipping_fee[9]['key']            = 9 #สร้าง Array key เพื่อเก็บข้อมูล 9
shipping_fee[9]['name']           = "กล่องขนาด XL" #สร้าง Array name เพื่อเก็บข้อมูลชนิดของพัสดุ 
shipping_fee[9]['max_weight']     = 20 #สร้าง Array max_weight เพื่อเก็บข้อมูล 20 (คือค่าน้ำหนักสูงสุดที่พัสดุรับได้ หน่วยเป็นกิโลกรัม)
shipping_fee[9]['fee']            = {} #สร้าง Array fee เพื่อเก็บข้อมูล main out package ให้อยู่ใน Array เดียวกัน
shipping_fee[9]['fee']['main']    = 290 #สร้าง Array out เพื่อเก็บค่า 290 (ค่าส่งพัสดุในพื้นที่ปริมปริมณฑล)
shipping_fee[9]['fee']['out']     = 330 #สร้าง Array out เพื่อเก็บค่า 330 (ค่าส่งพัสดุในพื้นที่ต่างจังหวัด)
shipping_fee[9]['fee']['package'] = 0 #สร้าง Array package เพื่อเก็บค่า 0 (ค่าบรรจุภัณฑ์)

shipping_fee[10]                   = {} #สร้าง Array 10 เพื่อเก็บข้อมูล key name max_weight fee ให้อยู่ใน Array เดียวกัน
shipping_fee[10]['key']            = 10 #สร้าง Array key เพื่อเก็บข้อมูล 10
shipping_fee[10]['name']           = "กล่องขนาด XXL" #สร้าง Array name เพื่อเก็บข้อมูลชนิดของพัสดุ 
shipping_fee[10]['max_weight']     = 30 #สร้าง Array max_weight เพื่อเก็บข้อมูล 30 (คือค่าน้ำหนักสูงสุดที่พัสดุรับได้ หน่วยเป็นกิโลกรัม)
shipping_fee[10]['fee']            = {} #สร้าง Array fee เพื่อเก็บข้อมูล main out package ให้อยู่ใน Array เดียวกัน
shipping_fee[10]['fee']['main']    = 380 #สร้าง Array out เพื่อเก็บค่า 380 (ค่าส่งพัสดุในพื้นที่ปริมปริมณฑล)
shipping_fee[10]['fee']['out']     = 420 #สร้าง Array out เพื่อเก็บค่า 420 (ค่าส่งพัสดุในพื้นที่ต่างจังหวัด)
shipping_fee[10]['fee']['package'] = 0 #สร้าง Array package เพื่อเก็บค่า 0 (ค่าบรรจุภัณฑ์)
storesetting['shipping_fee'] = shipping_fee #นำข้อมูลที่อยูใน shipping_fee มาเก็บไว้ใน storesetting['shipping_fee']

# ZIPCODE CHECK การเชครหัสไปรษณีย์
def CheckZipCode(provincedata): #สร้างฟังก์ชัน  CheckZipCode เพื่อตรวจสอบเลขไปรษณีย์
    while True: #วนซ้ำจนกว่าจะเจอคำสั่ง break 
      while True: #วนซ้ำจนกว่าจะเจอคำสั่ง break  
        zipcode = input("กรุณากรอกรหัสไปรษณีย์ : ") #สร้างตัวแปร zipcode เก็บข้อมูลเลขไปรษณีย์
        if zipcode in provincedata : #ถ้าเลขไปรษณีย์อยู่ใน provincedata 
            print("กรุณาตรวจสอบความถูกต้อง")  #แสดงข้อความว่า กรุณาตรวจสอบความถูกต้อง
            print("หมายเลขไปรษณีย์ {} ตำบล{} อำเภอ{} จังหวัด{} ใช่หรือไม่".format(zipcode, provincedata[zipcode]['district'],provincedata[zipcode]['amphoe'], provincedata[zipcode]['province']))#แสดงข้อความ หมายเลขไปรษณีย์... ตำบล... อำเภอ... จังหวัด... ใช่หรือไม่" 
            try: #ตรวจหาError
              check = input("หากข้อมูลถูกต้องพิมพ์ Enter หรือหากไม่ถูกต้องพิมพ์อื่นๆ : ")  #สร้างตัวแปร check เพื่อรับข้อมูลทางแป้นพิมพ์  
              if check == '' : #ถ้าผู้ใช้งานกด Enter
                return zipcode #นำข้อมูลกลับไปเก็บไว้ใน zipcode
                break #หยุดทำงาน While loop
              elif check != '' : #แต่ถ้าผู้ใช้งานไม่ได้งานกด Enter
                continue #กลับไปรับข้อมูล zipcode ใหม่
            except: #ถ้า Error
              print("กรุณาป้อนข้อมูลเป็นตัวเลข") #แสดงข้อความ กรุณาป้อนข้อมูลเป็นตัวเลข    
        else : #เลขไปรษณีย์ไม่อยู่ใน provincedata 
            print("หมายเลขไปรษณีย์ไม่ถูกต้อง กรุณาลองใหม่อีกครั้ง") #แสดงข้อความ หมายเลขไปรษณีย์ไม่ถูกต้อง กรุณาลองใหม่อีกครั้ง

# Calculator balance
def CalBalance(storesetting): #สร้างฟังก์ชัน  CalBalance เพื่อคำนวณค่าน้ำหนักและราคาส่งพัสดุ
    while True: #วนซ้ำจนกว่าจะเจอคำสั่ง break
        while True: #วนซ้ำจนกว่าจะเจอคำสั่ง break
          for data in storesetting['shipping_fee']: #ให้ loop storesetting['shipping_fee'] ตามจำนวน data  
              print("พิมพ์ {} เพื่อเลือก {} น้ำหนักไม่เกิน {} กิโลกรัม".format(storesetting['shipping_fee'][data]['key'], storesetting['shipping_fee'][data]['name'], 
                                                                               storesetting['shipping_fee'][data]['max_weight']))#แสดงข้อความ พิมพ์... เพื่อเลือก... น้ำหนักไม่เกิน... กิโลกรัม
          try: #ตรวจหาError
            typeinput = int(input("กรุณากรอกข้อมูลชนิดพัสดุ : ")) #สร้างตัวแปร typeinput เพื่อรับข้อมูลชนิดของพัสดุทางแป้นพิมพ์
            if typeinput in storesetting['shipping_fee'] : #ถ้าชนิดของพัสดุมีอยู่ใน storesetting['shipping_fee']
              dataPackage = {} #สร้างตัวแปร dataPackage เพื่อเก็บข้อมูลของพัสดุ 
              dataPackage = storesetting['shipping_fee'][typeinput] #เอาข้อมูลที่ได้จาก storesetting['shipping_fee'][typeinput] มาเก็บไว้ใน dataPackage
              break #หยุดทำงาน While loop
            else : #ถ้าชนิดของพัสดุไม่อยู่ใน storesetting['shipping_fee']
              print("ชนิดของพัสดุไม่ถูกต้อง กรุณาระบุใหม่อีกครั้ง") #แสดงข้อความ ชนิดของพัสดุไม่ถูกต้อง กรุณาระบุใหม่อีกครั้ง
              continue #วนกลับไปชนิดพัสดุใหม่
          except: #ถ้า Error
            print("กรุณาป้อนข้อมูลเป็นลขจำนวนเต็ม") #แสดงข้อความ กรุณาป้อนข้อมูลเป็นตัวเลข
        while True: #วนซ้ำจนกว่าจะเจอคำสั่ง break
            try: #ตรวจหาError
              weight = float(input("กรุณากรอกน้ำหนักพัสดุ (KG): ")) #สร้างตัวแปร weight รับค่าน้ำหนักของพัสดุทางแป้นพิมพ์เป็นจำนวนทศนิยม
              if weight <= 0 : #ถ้าน้ำหนักน้อยกว่าหรือเท่ากับ 0 
                print("กรุณากรอกน้ำหนักของพัสดุให้ถูกต้อง") #แสดงข้อความ กรุณากรอกน้ำหนักของพัสดุให้ถูกต้อง
                continue #กลับไปรับค่า weight ใหม่
              else : #แต่ถ้าน้ำหนักมากว่า 0 
                if weight > dataPackage['max_weight'] : #ถ้าค่าน้ำหนักมากว่าค่า  max_weight ใน dataPackage 
                  print("น้ำหนักของพัสดุเกิน กรุณาเลือกชนิดของบรรจุภัณฑ์ใหม่") #แสดงข้อความ น้ำหนักของพัสดุเกิน กรุณาเลือกชนิดของบรรจุภัณฑ์ใหม่
                else: #แต่ถ้าค่าน้ำน้อยกว่าค่า  max_weight ใน dataPackage 
                  print("ยืนยันการเลือกกล่องบรรจุ {} สำหรับบรรจุพัสดุน้ำหนัก {} กิโลกรัม ค่าจัดส่งกรุงเทพและปริมณทล {} บาท จัดส่งต่างจังหวัด {} บาท และค่าบรรจุภัณฑ์ {} บาท".format(dataPackage['name'], weight,
                   dataPackage['fee']['main'], dataPackage['fee']['out'],dataPackage['fee']['package'] ))#แสดงข้อความ ยืนยันการเลือกกล่องบรรจุ... สำหรับบรรจุพัสดุน้ำหนัก... กิโลกรัม ค่าจัดส่งกรุงเทพและปริมณฑล... บาท จัดส่งต่างจังหวัด... บาท และมีค่าบรรจุภัณฑ์ที่... บาท 
                  check = input("หากข้อมูลถูกต้องกรุณากด Enter หรือหากไม่ถูกต้องพิมพ์อื่นๆ: ")#สร้างตัวแปร check เพื่อรับข้อมูลทางแป้นพิมพ์  
                  if check == '' : #ถ้าผู้ใช้งานกด Enter
                    dataPackage['weight'] = weight  #เก็บค่า weight ไว้ใน dataPackage['weight']
                    return dataPackage #นำข้อมูลกลับไปเก็บไว้ใน dataPackage
                  elif check != '' : #ถ้าผู้ใช้งานไม่ได้กด Enter
                    break #หยุดทำงาน While loop
            except: #ถ้า Error
              print("กรุณาป้อนข้อมูลเป็นตัวเลข") #แสดงข้อความ กรุณาป้อนข้อมูลเป็นตัวเลข
              continue #กลับไปรับค่า weight ใหม่
              # CHECK
def Checkphone(): #สร้างฟังก์ชันชื่อว่า Checkphone เพื่อนตรวจสอบหมายเลขโทรศัพท์
  while True: #วนซ้ำจนกว่าจะเจอคำสั่ง break   
    phonenum = input("กรุณากรอกเบอร์โทรศัพท์ : ") #สร้างตัวแปร phonenum เพื่อรับข้อมูลหมายเลขโทรศัพท์ทางแป้นพิมพ์และเก็บข้อมูลไว้ในตัวแปร
    if len(phonenum) == 10 : #ถ้าหมายเลขโทรศัพท์มี 10 ตัว
      return phonenum #นำข้อมูลกลับไปเก็บไว้ใน phonenum
      break #หยุดทำงาน While loop
    else : #ถ้าหมายเลขโทรศัพท์ไม่เท่ากับ 10 ตัว
      print("เบอร์โทรศัพท์ไม่ถูกต้อง กรุณาลองใหม่อีกครั้ง") #แสดงข้อความ เบอร์โทรศัพท์ไม่ถูกต้อง กรุณาลองใหม่อีกครั้ง

# CHECK Personal ID
def CheckPID(): #สร้างฟังก์ชัน  CheckPID
  while True: #วนซ้ำจนกว่าจะเจอคำสั่ง break
    pid = input("กรุณากรอกเลขบัตรประชาชน : ") #สร้างตัวแปร pid เพื่อรับข้อมูลเลขบัตรประชาชนทางแป้นพิมพ์
    if (len(pid) != 13): #ถ้าข้อมูลเลขบัตรประชาชนไม่เท่ากับ 13 ตัว
      print("กรุณากรอกหมายเลขบัตรประชาชนให้ครบ 13 หลัก") #แสดงข้อความ กรุณากรอกหมายเลขบัตรประชาชนให้ครบ 13 หลัก
      continue #กลับไปรับค่า pid ใหม่
    num = 0 # ค่าสำหรับอ้างอิง index list ข้อมูลบัตรประชาชน
    num2 = 13 # ค่าประจำหลัก
    listdata = list(pid) # list ข้อมูลบัตรประชาชน
    sum = 0 # ผลลัพธ์
    while num<12: #วนซ้ำจนกว่า numจะน้อยกว่า 12
      sum += int(listdata[num])*(num2-num) # นำค่า num เป็น index list แต่ละตัว * (num2 - num) แล้วรวมเข้ากับ sum
      num += 1 # เพิ่มค่า num อีก 1
    digit13 = math.fmod(sum,11) # sum หาร 11 เอาเศษ
    if digit13 == 0: # ถ้าเศษ = 0
      digit13 = 1 # ค่าหลักที่ 13 คือ 1
    elif digit13 == 1: # ถ้าเศษ = 1
      digit13 = 0 # ค่าหลักที่ 13 คือ 0
    else: #ถ้าเศษ ไม่เท่ากับ 0
      digit13 = 11 - digit13 # ถ้าเศษไม่ใช่กับอะไร ให้เอา 11 - digit13
    if digit13 == int(listdata[12]): # ถ้าค่าหลักที่ 13 เท่ากับค่าหลักที่ 13 ที่ป้อนข้อมูลมา คืนค่า True
      return pid #นำค่ากลับไปเก็บไว้ใน pid
      break #หยุดทำงาน While loop
    else: # ถ้าค่าหลักที่ 13 ไม่เท่ากับค่าหลักที่ 13 ที่ป้อนข้อมูลมา คืนค่า False
      print("หมายเลขบัตรประชาชนไม่ถูกต้อง! กรุณากรอกหมายเลขบัตรประชาชนใหม่อีกครั้ง") #แสดงข้อความ หมายเลขบัตรประชาชนไม่ถูกต้อง! กรุณากรอกหมายเลขบัตรประชาชนใหม่อีกครั้ง
      continue #กลับไปรับค่า pid ใหม่
      # START PROGRAM
print("===================================================") #แสดงข้อความ ===================================================
print("           - Super Fast Delivery TH -              ") #แสดงข้อความ "           - Super Fast Delivery TH -              
print("") #เว้นบรรทัด
storesetting['store_name']  = input("กรุณากรอกชื่อสาขา : ") #รับข้อมูลชื่อสาขาทางแป้นพิมพ์ โดยเก็บข้อมูลไว้ใน storesetting['store_name']
storesetting['address']     = input("กรุณากรอกที่อยู่สาขา : ") #รับข้อมูลที่อยู่สาขาทางแป้นพิมพ์ โดยเก็บข้อมูลไว้ใน storesetting['address']
storesetting['zipcode']     = CheckZipCode(provincedata) #เก็บรหัสไปรษณีย์ที่ได้จากการทำงานของ ฟังก์ชัน CheckZipCode(provincedata) ไว้ใน storesetting['zipcode']
if provincedata[str(storesetting['zipcode'])]['is_main'] : #ถ้ารหัสไปรษณีย์ของร้านอยู่ในกรุงเทพปริมณฑล
    storesetting['is_main'] = True #ให้ storesetting['is_main'] มีค่าเป็น True
else: #ถ้ารหัสไปรษณีย์ของร้านค้าอยู่ในพื้นที่ต่างจังหวัด
    storesetting['is_main'] = False #ให้ storesetting['is_main'] มีค่าเป็น Flase
storesetting['district']    = provincedata[str(storesetting['zipcode'])]['district'] #นำข้อมูลของ provincedata[str(storesetting['zipcode'])]['district'] มาเก็บไว้ใน storesetting['district']
storesetting['amphoe']      = provincedata[str(storesetting['zipcode'])]['amphoe'] #นำข้อมูลของ provincedata[str(storesetting['zipcode'])]['amphoe'] มาเก็บไว้ใน storesetting['amphoe']
storesetting['province']    = provincedata[str(storesetting['zipcode'])]['province'] #นำข้อมูลของ provincedata[str(storesetting['zipcode'])]['province'] มาเก็บไว้ใน storesetting['province']
print("\n") #ขึ้นบรรทัดใหม่


while True: #วนซ้ำจนกว่าจะเจอคำสั่ง break
  customer = {} #สร้างตัวแปร customer เพื่อเก็บข้อมูล เลขบัตรประชาชน ที่อยู่ ของลูกค้าที่มาใช้บริการ
  print("===================================================") #แสดงข้อความ ===================================================
  print("            - CUSTOMER INFORMATION -               ") #แสดงข้อความ             - CUSTOMER INFORMATION -               
  print("") #เว้นบรรทัด 
  print("กรุณาระบุข้อมูลผู้ส่งสินค้า หากต้องการสิ้นสุดการทำงานกรุณาพิมพ์ 0") #แสดงข้อความ กรุณาระบุข้อมูลผู้ส่งสินค้า หากต้องการสิ้นสุดการทำงานกรุณาพิมพ์ 0
  customer['customer_name']       = input("กรุณากรอกชื่อผู้ส่ง : ") #รับข้อมูลชื่อผู้ส่งทางแป้นพิมพ์ และเก็บไว้ใน customer['customer_name']
  if customer['customer_name'] == '0' : #ถ้า customer['customer_name'] คือ 0
      break #หยุดการทำงาน
  customer['customer_id']         = CheckPID() #เก็บเลขบัตรประชาชนที่ได้จากการทำงานของ ฟังก์ชัน CheckPID() ไว้ใน customer['customer_id']
  customer['customer_address']    = input("กรุณากรอกที่อยู่ผู้ส่ง : ") #รับข้อมูลที่อยู่ผู้ส่งทางแป้นพิมพ์ และเก็บไว้ใน customer['customer_name']
  customer['customer_zipcode']    = CheckZipCode(provincedata) #นำข้อมูลเลขไปรษณีย์ที่ได้จากฟังก์ชัน CheckZipCode(provincedata) มาเก็บไว้ใน customer['customer_zipcode']
  customer['customer_district']    = provincedata[str(customer['customer_zipcode'])]['district'] #นำข้อมูลของ provincedata[str(customer['customer_zipcode'])]['district'] มาเก็บไว้ใน customer['customer_district']
  customer['customer_amphoe']      = provincedata[str(customer['customer_zipcode'])]['amphoe'] #นำข้อมูลของ provincedata[str(customer['customer_zipcode'])]['amphoe'] มาเก็บไว้ใน customer['customer_amphoe']
  customer['customer_province']    = provincedata[str(customer['customer_zipcode'])]['province'] #นำข้อมูลของ provincedata[str(customer['customer_zipcode'])]['province'] มาเก็บไว้ใน customer['customer_province']
  customer['customer_full_addr']   = 'ที่อยู่ ' + (customer['customer_address'] + ' ตำบล' + customer['customer_district'] + ' อำเภอ' 
    + customer['customer_amphoe'] + ' จังหวัด' + customer['customer_province'] + ' , ' + customer['customer_zipcode']) #แสดงข้อความ ที่อยู่... ตำบล... อำเภอ... จังหวัด....,รหัสไปรษณีย์ลูกค้า
  print("\n\n") #เว้นบรรทัด
  customer['package'] = [] #สร้างตัวแปร customer['package'] เพื่อเก็บข้อมูลพัสดุ
  # PACKAGE
  while True: #วนซ้ำจนกว่าจะเจอคำสั่ง break
      package = {} #สร้างตัวแปร package เพื่อเก็บข้อมูล พัสดุ
      print("===================================================") #แสดงข้อความ ===================================================
      print("            - PACKAGE INFORMATION -                ") #แสดงข้อความ             - PACKAGE INFORMATION -                
      print("กรุณาระบุข้อมูลผู้รับสินค้า หากต้องการสิ้นสุดการทำงานกรุณาพิมพ์ 0 ") #แสดงข้อความ กรุณาระบุข้อมูลผู้รับสินค้า หากต้องการสิ้นสุดการทำงานกรุณาพิมพ์ 0
      package['receiver_name']        = input("กรุณากรอกชื่อผู้รับ : ") #รับข้อมูลชื่อผู้รับทางแป้นพิมพ์ และเก็บไว้ใน package['receiver_name']
      if package['receiver_name'] == '0' : #ถ้า package['receiver_name'] คือ 0
        break #สั่งให้หยุด loop
      package['receiver_phone']       = Checkphone() #เก็บข้อมูลเบอร์โทรศัพท์ที่ได้จากการทำงานของ ฟังก์ชัน Checkphone() ไว้ใน package['receiver_phone']  
      weightdata                      = CalBalance(storesetting) #เก็บราคาค่าขนส่งที่ได้จากการทำงานของ ฟังก์ชัน CalBalance(storesetting) ไว้ใน weightdata 
      package['weight']               = weightdata['weight'] #นำค่า weightdata['weight'] เก็บไว้ใน package['weight'] 
      package['type']                 = weightdata['key'] #นำค่า weightdata['key'] เก็บไว้ใน package['type'] 
      PackageFee = weightdata['fee']['package'] #ให้ PackageFee = weightdata['fee']['package']
      package['receiver_address']     = input("กรุณากรอกที่อยู่ : ") #สร้างตัวแปร package['receiver_address'] เพื่อรับข้อมูลที่อยู่ทางแป้นพิมพ์ 
      package['receiver_zipcode']     = CheckZipCode(provincedata) #เก็บรหัสไปรษณีย์ที่ได้จากการทำงานของ ฟังก์ชัน CheckZipCode(provincedata) ไว้ใน package['receiver_zipcode']
      package['receiver_district']    = provincedata[str(package['receiver_zipcode'])]['district'] #นำข้อมูลของ provincedata[str(package['receiver_zipcode'])]['district'] มาเก็บไว้ใน package['receiver_district']
      package['receiver_amphoe']      = provincedata[str(package['receiver_zipcode'])]['amphoe'] #นำข้อมูลของ provincedata[str(package['receiver_zipcode'])]['amphoe'] มาเก็บไว้ใน package['receiver_amphoe'] 
      package['receiver_province']    = provincedata[str(package['receiver_zipcode'])]['province'] #นำข้อมูลของ provincedata[str(package['receiver_zipcode'])]['province'] มาเก็บไว้ใน package['receiver_province']
      package['receiver_full_addr']   = 'ที่อยู่ ' + (package['receiver_address'] + ' ตำบล'+ package['receiver_district'] + ' อำเภอ' + package['receiver_amphoe'] + ' จังหวัด' + package['receiver_province'] + ' ,'  + package['receiver_zipcode'])#แสดงข้อความ ที่อยู่... ตำบล... อำเภอ... จังหวัด....,รหัสไปรษณีย์ผู้รับ
      if storesetting['is_main']: #ถ้าร้านค้าอยู่ในเขตกรุงเทพปริมณฑล'
        if provincedata[str(package['receiver_zipcode'])]['is_main'] : #ถ้าผู้ส่งอยู่ในกรุงเทพปริมณฑล
          balace = weightdata['fee']['main'] #ให้ค่า balace เท่ากับ weightdata['fee']['main']
        else: #ถ้าผู้ส่งไม่อยู่ในกรุงเทพปริมณฑล
          balace = weightdata['fee']['out'] #ให้ค่า balace เท่ากับ weightdata['fee']['out']
      else: #ถ้าร้านค้าไม่อยูุ่ในเขตกรุงเทพปริมณฑล
        balace = weightdata['fee']['out'] #ให้ค่า balace เท่ากับ weightdata['fee']['out']    
      check = input('ต้องการรับบรรจุภัณฑ์หรือไม่ ถ้าใช่กรุณากด Enter หรือหากไม่ถูกต้องพิมพ์อื่นๆ :') #สร้างตัวแปร check เพื่อรับค่าทางแป้นพิมพ์
      if check != '' : #ถ้าผู้ใช้งานไม่ได้กด Enter
        packageFee = 0 #ให้ PackageFee มีค่าเป็น 0
        print('คุณไม่ต้องการบรรจุภัณฑ์') #แสดงข้อความ คุณไม่ต้องการบรรจุภัณฑ์
      elif check == '' : #ถ้าผู้ใช้งานกด Enter
        PackageFee = weightdata['fee']['package'] #ให้ PackageFee มีค่าเท่ากับค่าใน weightdata['fee']['package']
        print('คุณต้องการบรรจุภัณฑ์')#แสดงข้อความ คุณต้องการบรรจุภัณฑ์
      package['balace'] = balace #นำค่า balace เก็บไว้ใน package['balace']
      package['PackageFee'] = PackageFee #นำค่า PackageFee เก็บไว้ใน package['PackageFee']
      package['TotalBalance'] = balace + PackageFee #นำค่า balace + PackageFee เก็บไว้ใน package['TotalBalance']

      if provincedata[str(package['receiver_zipcode'])]['is_main'] : #ถ้าผู้รับอยู่ในเขตกรุงเทพปริมณฑล
        package['is_main'] = True #ถ้าผู้รับอยู่ในกรุงเทพปริมณฑลให้เป็น True
      else: #ถ้าผู้รับไม่อยู่ในเขตกรุงเทพปริมณฑล
        package['is_main'] = False #ถ้าผู้รับอยู่ในกรุงเทพปริมณฑลให้เป็น False
      x = datetime.datetime.now() #ให้ X เท่ากับเวลาปัจจุบัน โดยใช้ฟังก์ชัน datetime
      package['tracking']             = 'TH' + x.strftime("%Y%m%d%S") #ให้เก็บค่า TH + เวลา ปี เดือน วัน และวินาที เข้าไปใน package['tracking'](เพื่อทำเป็นเลขใบเสร็จชำระเงินแบบปลอมๆ)
      datasender = {} #สร้างตัวแปร datasender เพื่อ เก็บข้อมูล ชื่อผู้ส่ง รหัสบัตรประชาชนผู้ส่ง ที่อยู่ผู้ส่ง รหัสไปรษณีย์ผู้ส่ง ไว้ใน Array เดียวกัน
      datasender['sender_name']       = customer['customer_name'] #นำข้อมูล customer['customer_name'] เก็บไว้ใน datasender['sender_name']
      datasender['sender_id']         = customer['customer_id'] #นำข้อมูล customer['customer_id'] เก็บไว้ใน datasender['sender_id']
      datasender['sender_address']    = customer['customer_address'] #นำข้อมูล customer['customer_address'] เก็บไว้ใน datasender['sender_address']
      datasender['sender_zipcode']    = customer['customer_zipcode'] #นำข้อมูล customer['customer_zipcode'] เก็บไว้ใน datasender['sender_zipcode']
      datasender['sender_district']   = customer['customer_district'] #นำข้อมูล customer['customer_district'] เก็บไว้ใน datasender['sender_district']
      datasender['sender_amphoe']     = customer['customer_amphoe'] #นำข้อมูล customer['customer_amphoe'] เก็บไว้ใน datasender['sender_amphoe']
      datasender['sender_province']   = customer['customer_province'] #นำข้อมูล customer['customer_province'] เก็บไว้ใน datasender['sender_province']
      datasender['sender_full_addr']  = customer['customer_full_addr'] #นำข้อมูล customer['customer_full_addr'] เก็บไว้ใน datasender['sender_full_addr']
      package['sender'] = datasender #นำข้อมูลจาก datasender มาเก็บไว้ใน package['sender']
      customer['package'].append(package) #เอา package เข้าไปใน list ของ customer['package']
  if len(customer['package']) != 0: #ถ้า จำนวนข้อมูลใน customer['package'] มีไม่เท่ากับ 0
    x = datetime.datetime.now() #ให้ X เท่ากับเวลาปัจจุบัน โดยใช้ฟังก์ชัน datetime
    customer['reciept_id'] = 'RP' + x.strftime("%Y%m%d%S") #ให้เก็บค่า RP + เวลา ปี เดือน วัน และวินาที เข้าไปใน customer['reciept_id'](เพื่อทำเป็นเลขใบเสร็จชำระเงินแบบปลอมๆ)
    print("===================================================") #แสดงข้อความ ===================================================
    print("") #เว้นบรรทัด
    print("           - Super Fast Delivery TH -              ") #แสดงข้อความ            - Super Fast Delivery TH -              
    print("สาขา{} ({}) จังหวัด{} {}".format(storesetting['store_name'], storesetting['district'], storesetting['province'], storesetting['zipcode'])) #แสดงข้อความ สาขา (ตำบล)  จังหวัด (รหัสไปรษณีย์)
    print("#{}                  {}".format(customer['reciept_id'], x.strftime("%d/%m/%Y"))) #แสดงค่า customer['reciept_id'] และ แสดงวัน/เดือน/ปี
    print("                  ขอบคุณที่ใช้บริการ                   ") #แสดงข้อความ                   ขอบคุณที่ใช้บริการ                   
    print("---------------------------------------------------") #แสดงข้อความ ---------------------------------------------------
    i = 1 #สร้างตัวแปรให้ i = 1
    totalbalance = 0 #สร้างตัวแปรให้ totalbalance  = 0 
    for packagedata in customer['package']: #ให้ loop customer['package'] ตามจำนวน packagedata  
      print("{}. ผู้รับ: {}                      TH {}".format(i, packagedata['receiver_name'], packagedata['receiver_zipcode'])) #แสดงข้อความ i. ผู้รับ: packagedata['receiver_name'] TH packagedata['receiver_zipcode']
      print("Tracking: {}".format(packagedata['tracking'])) #แสดงข้อความ Tracking: packagedata['tracking']
      print("จังหวัด: {}".format(packagedata['receiver_province'])) #แสดงข้อความ จังหวัด:  packagedata['receiver_province']
      print("เบอร์โทรผู้รับ: {}".format(packagedata['receiver_phone'])) #แสดงข้อความ เบอร์โทรผู้รับ: packagedata['receiver_phone']
      print("ค่าจัดส่ง                                 {} บาท".format(packagedata['balace'])) #แสดงข้อความ ค่าจัดส่ง balace บาท
      print("ค่าบรรจุภัณฑ์                             {} บาท".format(packagedata['PackageFee'])) #แสดงข้อความ ค่าบรรจุภัณฑ์  PackageFee บาท
      print("จำนวนเงินรวม                             {} บาท".format(packagedata['TotalBalance'])) #แสดงข้อความ จำนวนเงินรวม  TotalBalance บาท
      print("") #เว้นบรรทัด
      totalbalance += packagedata['TotalBalance'] #ให้ totalbalance = totalbalance +  packagedata['TotalBalance']
      i += 1 #ให้ i = i + 1
    print("---------------------------------------------------") #แสดงข้อความ ---------------------------------------------------
    print("รวมทั้งสิ้น                                     {} บาท".format(totalbalance)) #แสดงข้อความ รวมทั้งสิ้น totalbalance บาท
    print("\n\n\n") #ขึ้นบรรทัดใหม่
